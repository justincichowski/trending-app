YOUTUBE_API_KEY=YOUR_KEY_HERE
# PORT=3000

# --- Caching options for serverless ---
YT_CACHE_TTL_MS=300000
YT_CACHE_EMPTY_TTL_MS=60000
YT_CIRCUIT_TTL_MS=600000
# Optional persistent cache (Vercel KV / Upstash)
KV_REST_API_URL=
KV_REST_API_TOKEN=
TOP_TRENDS_TTL_MS=1800000


# --- KV (optional; may incur costs) ---
# Enabling KV adds a shared, durable server-side cache (cross-region, survives cold starts).
# COSTS: billed by reads, writes, and stored bytes (plan-dependent). In our design:
#  - Client TTL already avoids most repeat requests (60m left / 15m right).
#  - KV mainly helps post-TTL bursts and cold-start recomputation.
#  - We store small JSON blobs with TTL; keys auto-expire to bound storage.
#  - KV ops are typically cheaper than repeated upstream API calls and protect third-party quotas.
# To ENABLE: set ENABLE_KV=1 and provide KV credentials below, then redeploy.
ENABLE_KV=

# Required only if ENABLE_KV=1
KV_REST_API_URL=
KV_REST_API_TOKEN=

# Optional namespace/prefix for keys (e.g., prod, canary)
KV_NAMESPACE=
