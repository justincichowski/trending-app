@import url('https://fonts.googleapis.com/css2?family=Bangers&display=swap');

:root {
	--background-color: #ffffff;
	--text-color: #333333;
	--accent-color: #007bff;
	--card-background-color: #f8f9fa;
	--border-color: #dee2e6;
	--card-hover-background-color: #f1f3f5;
	--item-title-color: #555555;
	--category-button-background: #e9ecef;
	--category-button-text: #495057;
	--category-button-active-background: #343a40; /* Dark background for light theme */
	--category-button-active-text: #f8f9fa; /* Light text for light theme */
	--context-menu-highlight-bg: #007bff;
	--context-menu-highlight-text: #ffffff;
	--context-menu-active-bg: #0056b3;
	--back-to-top-hover-bg: #d3d9df;
}

html.dark-theme {
	--background-color: #121212;
	--text-color: #ffffff;
	--accent-color: #bb86fc;
	--card-background-color: #1e1e1e;
	--border-color: #333333;
	--card-hover-background-color: #252525;
	--item-title-color: #bbbbbb;
	--category-button-background: #343a40;
	--category-button-text: #e9ecef;
	--category-button-active-background: #e9ecef; /* Light background for dark theme */
	--category-button-active-text: #121212; /* Dark text for dark theme */
	--context-menu-highlight-bg: #bb86fc;
	--context-menu-highlight-text: #121212;
	--context-menu-active-bg: #9857e7;
	--back-to-top-hover-bg: #4a4a4a;
}

body, html{
	max-height: 100%;
	overflow: hidden;
}
body {
	background-color: var(--background-color);
	color: var(--text-color);
	transition: background-color 0.3s, color 0.3s;
	margin-top: 8px;
	margin-left: 8px;
	margin-right: 8px;
	margin-bottom: 0px!important;
	
}

@media (prefers-reduced-motion: reduce) {
	* {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}

.category-nav {
	position: relative;
	padding: 0 1rem; /* Add some padding on the sides */
	z-index: 5;       /* Position below the header */
}

.category-nav .swiper-wrapper {
	margin: 5px 0;
}

.category-nav .swiper-slide {
	width: auto; /* Allow slides to have their natural width */
	margin-right: 7.5px; /* Add spacing between buttons */
}

/*
 * NOTE: We don't need to remove the margin from the last child
 * because Swiper's free-scroll mode means the last item
 * won't be perfectly aligned to the right edge anyway, so the
 * margin has no negative visual effect. This is simpler and more robust.
 */

.category-link {
	display: block;
	padding: 0.3rem 0.8rem; /* Further reduced padding */
	text-decoration: none;
	border-radius: 10px;
	background-color: var(--category-button-background);
	color: var(--category-button-text);
	transition: background-color 0.2s, color 0.2s;
	border: none; /* Remove the old border */
	white-space: nowrap; /* Prevent text wrapping */
}


.category-link.active {
	background-color: var(--category-button-active-background);
	color: var(--category-button-active-text);
	font-weight: bold;
}


/* Gradient edges for scroll indication, controlled by Swiper events */
/* --- Swiper Navigation Arrows --- */
.swiper-button-prev,
.swiper-button-next {
	position: absolute;
	top: 50%;
	width: 40px; /* Wider to act as a mask */
	height: 40px;
	margin-top: -20px;
	z-index: 10;
	cursor: pointer;
	display: flex;
	align-items: center;
	justify-content: center;
	/* background is set per-button below */
	transition: background-color 0.2s;
}

/* The actual circular button is the ::after pseudo-element */
.swiper-button-prev::after,
.swiper-button-next::after {
	font-family: swiper-icons;
	font-size: 18px;
	color: var(--text-color);
	text-transform: none !important;
	letter-spacing: 0;
	font-variant: initial;
	line-height: 1;

	/* Styling for the circular button */
	display: flex;
	align-items: center;
	justify-content: center;
	width: 31px;
	height: 31px;
	background-color: var(--category-button-background);
	border-radius: 50%;
	box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
	transition: background-color 0.2s, transform 0.1s;
	z-index: 2; /* Ensure the button is on top of the fade */
	position: relative; /* Needed for z-index to apply */
}


.swiper-button-prev:hover::after,
.swiper-button-next:hover::after {
	background-color: var(--back-to-top-hover-bg);
}

.swiper-button-prev:active::after {
	transform: translateX(-3px) scale(0.9);
}

.swiper-button-next:active::after {
	transform: translateX(3px) scale(0.9);
}

.swiper-button-prev, .swiper-container-rtl .swiper-button-next {
	left: -0.5px;
	right: auto;
	background: linear-gradient(to left, transparent 0%, var(--background-color) 25%);
}

.swiper-button-next, .swiper-container-rtl .swiper-button-prev {
	right: -0.5px;
	left: auto;
	background: linear-gradient(to right, transparent 0%, var(--background-color) 25%);
}

.swiper-button-prev.swiper-button-disabled,
.swiper-button-next.swiper-button-disabled {
	display: none;
}

.swiper-button-prev::after {
	content: 'prev';
	transform: translateX(-3px);
}

.swiper-button-next::after {
	content: 'next';
	transform: translateX(3px);
}

.logo {
	position: relative;
	cursor: pointer;
	width: 220px;
	height: 50px;
	flex-shrink: 0;
	transition: transform 0.1s ease-in-out;
}

.logo:active:not(.no-animation) {
	transform: scale(1.05);
}

.logo-svg {
	width: 100%;
	height: 100%;
	overflow: visible;
}

.logo-letter {
	font-family: 'Bangers', cursive;
	font-size: 40px;
	font-weight: normal; /* The font is already bold */
	fill: var(--text-color);
	transition: transform 0.3s ease-out; /* Handles the smooth return */
}

.logo:hover .logo-letter {
	animation-duration: 0.1s;
	animation-fill-mode: both;
	animation-iteration-count: infinite;
	animation-direction: alternate;
	animation-timing-function: ease-in-out;
}

.logo-letter:nth-child(odd) {
	transform: translateY(-1.5px);
}

.logo-letter:nth-child(even) {
	transform: translateY(1.5px);
}

.logo:hover .logo-letter:nth-child(odd) {
	animation-name: jiggle-up;
}

.logo:hover .logo-letter:nth-child(even) {
	animation-name: jiggle-down;
}

@keyframes jiggle-up {
	from {
		transform: translateY(0);
	}
	to {
		transform: translateY(-1.5px);
	}
}

@keyframes jiggle-down {
	from {
		transform: translateY(0);
	}
	to {
		transform: translateY(1.5px);
	}
}

.logo-link {
	text-decoration: none;
}
.logo-wrapper {
	position: relative;
	display: inline-block;
}


/* --- Global Tooltip --- */
.global-tooltip {
	position: fixed;
	background-color: var(--card-background-color);
	color: var(--text-color);
	padding: 0.5rem;
	border-radius: 4px;
	border: 1px solid var(--accent-color);
	z-index: 10000;
	opacity: 0;
	transition: opacity 0.2s;
	pointer-events: none;
	white-space: nowrap;
}

.global-tooltip.is-visible {
	opacity: 1;
}

.main-content-wrapper {
	display: flex;
	justify-content: center;
	padding-top: 1rem;
	padding-left: 1rem;
	padding-right: 1rem;
	padding-bottom: 0px;
	/*
	 * FUTURE-PROOFING NOTE:
	 * This wrapper uses Flexbox to center the main content column.
	 * To add a left or right sidebar in the future, you can simply
	 * add a new sibling element to the `.main-content` div inside
	 * the `main-content-wrapper` in `index.html`.
	 *
	 * Example for a three-column layout:
	 * <div class="main-content-wrapper">
	 *   <aside class="left-sidebar">[...]</aside>
	 *   <main id="main-content">[...]</main>
	 *   <aside class="right-sidebar">[...]</aside>
	 * </div>
	 *
	 * You would then add flex properties to the sidebars as needed
	 * (e.g., `flex-basis`, `flex-grow`).
	 */
}

.main-content {
	/*
	 * This is the main column for the item cards.
	 * It has a max-width to prevent it from becoming too wide on large screens.
	 */
	max-width: 550px;
	width: 100%; /* Ensure it takes up available space up to its max-width */
	height: calc(100vh - 140px); /* Example height, adjust as needed */
	overflow-y: auto;
	scrollbar-width: none; /* Firefox */
}

.main-content::-webkit-scrollbar {
	display: none; /* Chrome, Safari, and Opera */
}

.page-loader-container {
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 20px;
	margin-bottom: 40px;
}

.loader-container {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100%;
}

.loader-svg {
	user-select: none; /* Make the loader non-selectable */
	-webkit-user-drag: none; /* Prevent dragging */
}

.loader-svg {
	animation: rotate 2s linear infinite;
	transform-origin: center center;
}

.loader-path {
	stroke: var(--category-button-text);
	stroke-linecap: round;
	animation: dash 1.5s ease-in-out infinite;
}

@keyframes rotate {
	100% {
		transform: rotate(360deg);
	}
}

@keyframes dash {
	0% {
		stroke-dasharray: 1, 200;
		stroke-dashoffset: 0;
	}
	50% {
		stroke-dasharray: 89, 200;
		stroke-dashoffset: -35px;
	}
	100% {
		stroke-dasharray: 89, 200;
		stroke-dashoffset: -124px;
	}
}

.item-card {
	/* The item card itself no longer needs a max-width, as its parent (.main-content) now controls it. */
	border: 1px solid var(--border-color);
	padding: 1rem;
	margin-bottom: 1rem;
	border-radius: 8px;
	background-color: var(--card-background-color);
	transition: background-color 0.2s ease-in-out;
}

.item-card:hover {
	background-color: var(--card-hover-background-color);
}

.item-card.is-removing {
	transition: all 0.4s ease-in-out;
	transform: scaleY(0);
	opacity: 0;
	max-height: 0;
	padding-top: 0;
	padding-bottom: 0;
	margin-bottom: 0;
	border-width: 0;
	overflow: hidden;
	transform-origin: top;
}

/* This is no longer needed as the page loader provides the bottom spacing. */
/* .item-card:last-child {
	margin-bottom: 40px;
} */

.item-controls {
	display: flex;
	justify-content: space-between; /* This is the key change */
	align-items: center;
	gap: 0.5rem;
	margin-top: 12.5px;
	margin-bottom: 12.5px;
	color: var(--text-color);
	opacity: 0.8;
	font-size: 0.9rem;
}

.item-meta {
	display: flex;
	align-items: center;
}

.item-actions {
	display: flex;
	align-items: center;
	gap: 0.5rem;
}

.item-meta .separator {
	margin: 0 0.25rem;
}

.icon-button {
	background: none;
	border: none;
	cursor: pointer;
	padding: 0;
	width: 24px;
	height: 24px;
	position: relative; /* For tooltip positioning */
}

.icon-button svg {
	width: 100%;
	height: 100%;
	fill: none;
	stroke: var(--text-color);
	stroke-width: 2;
	stroke-linecap: round;
	stroke-linejoin: round;
	transition: all 0.2s ease-in-out;
}

/* Favorite Button (Heart) */
.favorite-button .icon-heart path {
	fill: transparent;
	transition: fill 0.2s ease-in-out;
}

.favorite-button.is-favorited .icon-heart path {
	fill: var(--accent-color);
	stroke: var(--accent-color);
}

.favorite-button .icon-wrapper {
	display: inline-block;
	transition: transform 0.2s ease-in-out;
}

.favorite-button:hover .icon-wrapper {
	animation: heart-beat 0.5s ease-in-out infinite;
}

@keyframes heart-beat {
	0% {
		transform: scale(1);
	}
	50% {
		transform: scale(1.1);
	}
	100% {
		transform: scale(1);
	}
}

/* Hide Button (Eye) */
.hide-button .icon-eye-slash {
	opacity: 0;
	transition: opacity 0.2s ease-in-out;
}

.hide-button:hover .icon-eye-slash {
	opacity: 1;
}

/* Tooltips for Icon Buttons */

/* --- Header Icon Buttons --- */
#theme-toggle-button,
#settings-button {
	fill: var(--text-color);
	width: 24px;
	height: 24px;
	flex-shrink: 0; /* Prevent shrinking */
}

#settings-button .icon-wrapper {
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 100%;
	transition: transform 0.4s ease-in-out;
}

#settings-button:hover .icon-wrapper,
#settings-button:focus-within .icon-wrapper {
	transform: rotate(360deg);
}

.icon-theme-toggle .icon-sun,
.icon-theme-toggle .icon-moon {
	fill: var(--text-color);
	transition: opacity 0.3s ease-in-out;
}

#theme-toggle-button .icon-wrapper {
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 100%;
	transition: transform 0.2s ease-in-out;
}

#theme-toggle-button:hover .icon-wrapper {
	transform: scale(1.1);
}

/* --- Header Icon Buttons --- */
#theme-toggle-button,
#settings-button {
	fill: var(--text-color);
}

#settings-button .icon-wrapper {
	display: flex;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: 100%;
	transition: transform 0.4s ease-in-out;
}

#settings-button:hover .icon-wrapper:not(.is-active) {
	transform: rotate(360deg);
}

.icon-theme-toggle .icon-sun,
.icon-theme-toggle .icon-moon {
	fill: var(--text-color);
	transition: opacity 0.3s ease-in-out;
}

/* This was the incorrect rule that was transforming the button itself.
   It has been replaced by the rule above that targets the wrapper. */

.item-image {
	width: 100%;
	height: auto;
	object-fit: cover;
	border-radius: 4px;
	/* margin-bottom is removed as requested */
	cursor: pointer;
}

.item-title {
	font-size: 1.17em; /* Standard h3 font-size */
	font-weight: bold;
	margin-top: 0;
	margin-bottom: 10px;
}

.item-title a {
	color: var(--item-title-color);
	text-decoration: underline;
}

.item-title a:hover,
.item-title a:active {
	color: var(--text-color);
}

.item-source {
	display: none;
}

.more-button {
	background: none;
	border: none;
	color: var(--text-color);
	cursor: pointer;
	font-weight: bold;
	padding: 0;
	display: inline;
	margin-left: 4px;
}

.more-button:hover {
	text-decoration: underline;
}

.item-description a {
	color: inherit;
	text-decoration: none;
}

.item-description a:hover {
	text-decoration: underline;
}

/* --- Notification Toast --- */
.notification-container {
	position: fixed;
	bottom: 1rem;
	right: 1rem;
	z-index: 1000;
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
}

.notification {
	background-color: var(--card-background-color);
	color: var(--text-color);
	padding: 0.8rem 1.2rem;
	border-radius: 8px;
	border: 1px solid var(--border-color);
	box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
	display: flex;
	align-items: center;
	gap: 1rem;
	transform: translateY(150%);
	opacity: 0;
	transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;
	user-select: none;
}

.notification.show {
	transform: translateY(0);
	opacity: 1;
}

.notification-message {
	margin: 0;
	cursor: default;
}

.undo-button {
	background: none;
	border: none;
	color: var(--accent-color);
	cursor: pointer;
	font-weight: bold;
	padding: 0;
}

.app-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 1rem;
	position: relative; /* Needed for z-index to work */
	z-index: 10;      /* Ensure header is on top */
}

.controls {
	display: flex;
	align-items: center;
	gap: 1rem;
}

/* --- Search and Select Wrappers --- */
.search-bar-wrapper,
.select-wrapper {
	position: relative;
	display: flex;
	align-items: center;
	background-color: var(--category-button-background);
	border-radius: 20px;
	padding: 0.3rem 0.8rem;
	transition: background-color 0.2s;
	border: 1px solid transparent;
}

.select-wrapper {
	min-width: 65px;
}

.search-bar-wrapper {
	flex-grow: 1;
}

.search-bar-wrapper:focus-within,
.select-wrapper:focus-within {
	background-color: var(--card-background-color);
	border-color: var(--accent-color);
}

.search-bar-wrapper:focus-within #search-input,
.select-wrapper:focus-within #sort-select {
	background-color: var(--card-background-color);
}

#search-input,
#sort-select {
	background: none;
	border: none;
	outline: none;
	color: var(--text-color);
	width: 100%;
	background-color: var(--category-button-background);
	padding-left: 4px;
}

#sort-select option {
	background-color: var(--background-color);
	color: var(--text-color);
}

#sort-select:focus {
    outline: none;
}

#search-input {
	padding-right: 28px; /* Space for the clear button */
}

#search-input::placeholder {
	color: var(--text-color);
	opacity: 0.7;
}

#search-input::-webkit-search-cancel-button {
	-webkit-appearance: none;
	appearance: none;
	display: none;
}

#sort-select {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	/* padding-right is no longer needed as the wrapper handles spacing */
}

.select-wrapper::after {
	content: '▼';
	position: absolute;
	right: 0.6rem;
	top: 50%;
	transform: translateY(-50%);
	font-size: 0.8em;
	pointer-events: none;
	color: var(--text-color);
}


.clear-button {
	position: absolute;
	right: 0.5rem;
	top: 50%;
	transform: translateY(-50%);
	background: none;
	border: none;
	padding: 0;
	cursor: pointer;
	width: 20px;
	height: 20px;
	display: none; /* Hidden by default */
	align-items: center;
	justify-content: center;
}

.search-bar-wrapper.has-text .clear-button {
	display: flex; /* Shown when text is present */
}

.clear-button svg {
	width: 14px;
	height: 14px;
	fill: var(--text-color);
}

.search-toggle-button {
	display: none;
	width: 28px;
	height: 28px;
	transition: transform 0.2s ease-in-out;
}

.search-toggle-button:hover {
	transform: scale(1.1);
}

.search-toggle-button svg {
	stroke: var(--text-color);
}

@media (max-width: 550px) {
	/* Default mobile view: show only the icons */
	.search-bar-wrapper,
	.select-wrapper,
	.search-back-button {
		display: none;
	}

	.search-toggle-button,
	#theme-toggle-button,
	#settings-button {
		display: flex;
	}

	/* When search is active: show search bar and back button, hide icons */
	.controls.search-active .search-bar-wrapper,
	.controls.search-active .search-back-button {
		display: flex;
	}

	.controls.search-active .search-back-button {
		order: 1;
	}

	.controls.search-active .search-bar-wrapper {
		order: 2;
	}

	.search-back-button {
		flex-shrink: 0;
	}

	.controls.search-active .search-toggle-button,
	.controls.search-active #theme-toggle-button,
	.controls.search-active #settings-button,
	.controls.search-active .select-wrapper {
		display: none;
	}

	.search-toggle-button {
		order: 1;
	}

	#theme-toggle-button {
		order: 2;
	}

	#settings-button {
		order: 3;
	}

	.controls.active {
		display: flex;
		flex-direction: column;
		position: absolute;
		top: 100%;
		left: 0;
		right: 0;
		background-color: var(--background-color);
		padding: 1rem;
		border-bottom: 1px solid var(--border-color);
	}

	.controls.active > * {
		display: block;
		width: 100%;
		margin-bottom: 0.5rem;
	}
}

.settings-panel {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: rgba(0, 0, 0, 0.5);
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: 100;
	opacity: 0;
	pointer-events: none;
	transition: opacity 0.3s ease-in-out;
}

.settings-panel.is-visible {
	opacity: 1;
	pointer-events: auto;
}

.settings-panel.is-visible .settings-panel-content {
	transform: scale(1);
}

.settings-panel-content {
	background-color: var(--background-color);
	padding: 2rem;
	border-radius: 8px;
	border: 1px solid var(--border-color);
	transform: scale(0.95);
	transition: transform 0.3s ease-in-out;
}

.settings-panel-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	margin-bottom: 1.5rem;
	margin-top: -20px;
}

.settings-title {
	font-size: 1.5em;
	font-weight: bold;
}

.close-button {
	background: none;
	border: none;
	font-size: 2rem;
	cursor: pointer;
	line-height: 1;
	color: var(--text-color);
}


.undo-button:hover {
	text-decoration: underline;
}


/* --- Custom Context Menu --- */
.context-menu {
    position: fixed;
    z-index: 10000;
    width: 180px; /* Wider to prevent text wrapping */
    background-color: var(--card-background-color);
    border-radius: 6px; /* Slightly smaller radius */
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    display: none;
    padding: 0.25rem 0; /* More compact padding */
    outline: 1px solid rgba(128, 128, 128, 0.2); /* Subtle outline for floating effect */
}

.context-menu.show {
    display: block;
}

.context-menu ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

.context-menu ul li {
    padding: 0.5rem 1rem; /* More compact padding */
    cursor: pointer;
    color: var(--text-color);
    transition: background-color 0.1s, color 0.1s;
    font-size: 0.9rem; /* Smaller font size */
    border-radius: 4px;
    margin: 0 0.25rem;
}

.context-menu ul li:hover {
    background-color: var(--context-menu-highlight-bg);
    color: var(--context-menu-highlight-text);
}

.context-menu ul li:active {
    background-color: var(--context-menu-active-bg);
    color: var(--context-menu-highlight-text);
}

/* --- Back to Top Button --- */
#back-to-top {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    width: 40px;
    height: 40px;
    background-color: var(--category-button-background);
    transition: opacity 0.3s, transform 0.3s, background-color 0.2s;
    border-radius: 50%;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.3s, transform 0.3s;
    z-index: 100;
}

#back-to-top:not([hidden]) {
    opacity: 1;
    transform: translateY(0);
}

#back-to-top:hover {
    background-color: var(--back-to-top-hover-bg);
}

#back-to-top svg {
    fill: var(--category-button-active-text);
    width: 24px;
    height: 24px;
}

#back-to-top[data-tooltip]::after {
    top: auto;
    bottom: 125%;
    transform: translateX(calc(-50% - 15px));
}

/* --- Autocomplete --- */
.autocomplete-container {
	position: absolute;
	top: 100%;
	left: 0;
	right: 0;
	background-color: var(--card-background-color);
	border: 1px solid var(--border-color);
	border-top: none;
	border-radius: 0 0 8px 8px;
	z-index: 100;
	max-height: 300px;
	overflow-y: auto;
	box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.autocomplete-container ul {
	list-style: none;
	margin: 0;
	padding: 0;
}

.autocomplete-container li {
	padding: 0.75rem 1rem;
	cursor: pointer;
	display: flex;
	justify-content: space-between;
	align-items: center;
	transition: background-color 0.2s;
}

.autocomplete-container li:hover {
	background-color: var(--category-button-background);
	color: var(--category-button-text);
}

.delete-suggestion {
	background: none;
	border: none;
	color: var(--text-color);
	opacity: 0.5;
	cursor: pointer;
	font-size: 1.2rem;
	line-height: 1;
	padding: 0 0.5rem;
	transition: opacity 0.2s;
}

.delete-suggestion:hover {
	opacity: 1;
}

/* --- Inline Video Embed --- */
.item-image-container {
	position: relative;
	width: 100%;
	/* 16:9 Aspect Ratio */
	padding-top: 56.25%; 
	background-color: #000;
	border-radius: 4px;
	overflow: hidden;
}

.item-image-container .item-image,
.item-image-container iframe {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	border: 0;
}
