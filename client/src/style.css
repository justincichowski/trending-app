:root {
	--background-color: #ffffff;
	--text-color: #333333;
	--accent-color: #007bff;
	--card-background-color: #f8f9fa;
	--border-color: #dee2e6;
	--card-hover-background-color: #f1f3f5;
	--category-button-background: #e9ecef;
	--category-button-text: #495057;
	--category-button-active-background: #343a40; /* Dark background for light theme */
	--category-button-active-text: #f8f9fa; /* Light text for light theme */
}

html.dark-theme {
	--background-color: #121212;
	--text-color: #ffffff;
	--accent-color: #bb86fc;
	--card-background-color: #1e1e1e;
	--border-color: #333333;
	--card-hover-background-color: #252525;
	--category-button-background: #343a40;
	--category-button-text: #e9ecef;
	--category-button-active-background: #e9ecef; /* Light background for dark theme */
	--category-button-active-text: #121212; /* Dark text for dark theme */
}


body {
	background-color: var(--background-color);
	color: var(--text-color);
	transition: background-color 0.3s, color 0.3s;
	margin-top: 8px;
	margin-left: 8px;
	margin-right: 8px;
	margin-bottom: 0px!important;
	
}

@media (prefers-reduced-motion: reduce) {
	* {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}

.category-nav {
	position: relative;
	padding: 0 1rem; /* Add some padding on the sides */
}

.category-nav .swiper-slide {
	width: auto; /* Allow slides to have their natural width */
	margin-right: 7.5px; /* Add spacing between buttons */
}

/*
 * NOTE: We don't need to remove the margin from the last child
 * because Swiper's free-scroll mode means the last item
 * won't be perfectly aligned to the right edge anyway, so the
 * margin has no negative visual effect. This is simpler and more robust.
 */

.category-link {
	display: block;
	padding: 0.3rem 0.8rem; /* Further reduced padding */
	text-decoration: none;
	border-radius: 10px;
	background-color: var(--category-button-background);
	color: var(--category-button-text);
	transition: background-color 0.2s, color 0.2s;
	border: none; /* Remove the old border */
	white-space: nowrap; /* Prevent text wrapping */
}


.category-link.active {
	background-color: var(--category-button-active-background);
	color: var(--category-button-active-text);
	font-weight: bold;
}

/* Gradient edges for scroll indication, controlled by Swiper events */
.category-nav::before,
.category-nav::after {
	content: '';
	position: absolute;
	top: 0;
	bottom: 0;
	width: 2rem;
	pointer-events: none;
	z-index: 2;
	transition: opacity 0.3s;
}

.category-nav::before {
	left: 0;
	background: linear-gradient(to right, var(--background-color), transparent);
}

.category-nav::after {
	right: 0;
	background: linear-gradient(to left, var(--background-color), transparent);
}

/* Hide the gradients when the slider is at the corresponding edge */
.category-nav.is-beginning::before {
	opacity: 0;
}

.category-nav.is-end::after {
	opacity: 0;
}

.logo {
	position: relative;
	cursor: pointer;
}

.logo[data-tooltip]::after {
	content: attr(data-tooltip);
	position: absolute;
	left: -10px;
	transform: translateX(0);
	top: 125%;
	padding: 0.5rem;
	border-radius: 4px;
	background-color: var(--card-background-color);
	color: var(--text-color);
	white-space: nowrap;
	z-index: 10;
	opacity: 0;
	transition: opacity 0.3s;
	pointer-events: none;
	border: 1px solid var(--accent-color);
}

.logo[data-tooltip]:hover::after,
.logo[data-tooltip]:active::after {
	opacity: 1;
}

.main-content-wrapper {
	display: flex;
	justify-content: center;
	padding-top: 1rem;
	padding-left: 1rem;
	padding-right: 1rem;
	padding-bottom: 0px;
	/*
	 * FUTURE-PROOFING NOTE:
	 * This wrapper uses Flexbox to center the main content column.
	 * To add a left or right sidebar in the future, you can simply
	 * add a new sibling element to the `.main-content` div inside
	 * the `main-content-wrapper` in `index.html`.
	 *
	 * Example for a three-column layout:
	 * <div class="main-content-wrapper">
	 *   <aside class="left-sidebar">[...]</aside>
	 *   <main id="main-content">[...]</main>
	 *   <aside class="right-sidebar">[...]</aside>
	 * </div>
	 *
	 * You would then add flex properties to the sidebars as needed
	 * (e.g., `flex-basis`, `flex-grow`).
	 */
}

.main-content {
	/*
	 * This is the main column for the item cards.
	 * It has a max-width to prevent it from becoming too wide on large screens.
	 */
	max-width: 550px;
	width: 100%; /* Ensure it takes up available space up to its max-width */
	height: calc(100vh - 105px); /* Example height, adjust as needed */
	overflow-y: auto;
	scrollbar-width: none; /* Firefox */
}

.main-content::-webkit-scrollbar {
	display: none; /* Chrome, Safari, and Opera */
}

.loader-container {
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100%;
}

.loader-svg {
	user-select: none; /* Make the loader non-selectable */
	-webkit-user-drag: none; /* Prevent dragging */
}

.loader-svg {
	animation: rotate 2s linear infinite;
	transform-origin: center center;
}

.loader-path {
	stroke: var(--category-button-text);
	stroke-linecap: round;
	animation: dash 1.5s ease-in-out infinite;
}

@keyframes rotate {
	100% {
		transform: rotate(360deg);
	}
}

@keyframes dash {
	0% {
		stroke-dasharray: 1, 200;
		stroke-dashoffset: 0;
	}
	50% {
		stroke-dasharray: 89, 200;
		stroke-dashoffset: -35px;
	}
	100% {
		stroke-dasharray: 89, 200;
		stroke-dashoffset: -124px;
	}
}

.item-card {
	/* The item card itself no longer needs a max-width, as its parent (.main-content) now controls it. */
	border: 1px solid var(--border-color);
	padding: 1rem;
	margin-bottom: 1rem;
	border-radius: 8px;
	background-color: var(--card-background-color);
	transition: background-color 0.2s ease-in-out;
}

.item-card:hover {
	background-color: var(--card-hover-background-color);
}

.item-controls {
	display: flex;
	justify-content: flex-end;
	gap: 0.5rem;
	margin-top: 12.5px;
	margin-bottom: 12.5px;
}

.item-image {
	width: 100%;
	height: auto;
	object-fit: cover;
	border-radius: 4px;
	/* margin-bottom is removed as requested */
}

.item-title {
	font-size: 1.17em; /* Standard h3 font-size */
	font-weight: bold;
	margin-top: 0;
	margin-bottom: 10px;
}

.app-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 1rem;
}

.controls {
	display: flex;
	align-items: center;
	gap: 1rem;
}

.search-toggle-button {
	display: none;
}

@media (max-width: 550px) {
	.controls > *:not(.search-toggle-button) {
		display: none;
	}

	.search-toggle-button {
		display: block;
	}

	.controls.active {
		display: flex;
		flex-direction: column;
		position: absolute;
		top: 100%;
		left: 0;
		right: 0;
		background-color: var(--background-color);
		padding: 1rem;
		border-bottom: 1px solid var(--border-color);
	}

	.controls.active > * {
		display: block;
		width: 100%;
		margin-bottom: 0.5rem;
	}
}

.settings-panel {
	display: none; /* Hidden by default */
}

.settings-panel:not([hidden]) {
	display: flex; /* Show when not hidden */
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: rgba(0, 0, 0, 0.5);
	display: flex;
	justify-content: center;
	align-items: center;
	z-index: 100;
}

.settings-panel-content {
	background-color: var(--background-color);
	padding: 2rem;
	border-radius: 8px;
	border: 1px solid var(--border-color);
}

.settings-panel-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	margin-bottom: 1.5rem;
	margin-top: -20px;
}

.settings-title {
	font-size: 1.5em;
	font-weight: bold;
}

.close-button {
	background: none;
	border: none;
	font-size: 2rem;
	cursor: pointer;
	line-height: 1;
	color: var(--text-color);
}
